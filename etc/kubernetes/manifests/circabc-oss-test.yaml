################################################################################
#      Copyright (C) 2020        Sebastian Francisco Colomar Bauza             #
#      SPDX-License-Identifier:  GPL-2.0-only                                  #
################################################################################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy
spec:
  selector:
    matchLabels:
      app: proxy
  template:
    metadata:
      labels:
        app: proxy
    spec:
      containers:
      - name: proxy
        image: academiaonline/nginx:8.3
        ports:
        - containerPort: 8080
          protocol: TCP        
        volumeMounts:
        - name: nginx-default
          mountPath: /etc/nginx/conf.d/default.conf
          readOnly: true
          subPath: default.conf
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          readOnly: true
          subPath: nginx.conf
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
      volumes:
      - name: nginx-conf
        configMap:
          items:
          - key: nginx.conf.proxy
            path: nginx.conf
          name: nginx.conf.proxy
      - name: nginx-default
        secret:
          items:
          - key: default.conf.proxy
            path: default.conf
          secretName: default.conf.proxy
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}          
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: angular
spec:
  replicas: 1
  selector:
    matchLabels:
      app: angular
  template:
    metadata:
      labels:
        app: angular
    spec:
      containers:
      - name: angular
        image: academiaonline/circabc-oss:test-angular
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          protocol: TCP
        volumeMounts:
        - name: nginx-default
          mountPath: /etc/nginx/conf.d/default.conf
          readOnly: true
          subPath: default.conf
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          readOnly: true
          subPath: nginx.conf
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
      volumes:
      - name: nginx-conf
        configMap:
          items:
          - key: nginx.conf.angular
            path: nginx.conf
          name: nginx.conf.angular
      - name: nginx-default
        secret:
          items:
          - key: default.conf.angular
            path: default.conf
          secretName: default.conf.angular
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: db
        args:
        - $(MYSQL_ARG_1)
        - $(MYSQL_ARG_2)
        - $(MYSQL_ARG_3)
        - $(MYSQL_ARG_4)
        - $(MYSQL_ARG_5)
        - $(MYSQL_ARG_6)
        env:
        - name: MYSQL_ARG_1
          valueFrom:
            configMapKeyRef:
              key: env1
              name: db.env
        - name: MYSQL_ARG_2
          valueFrom:
            configMapKeyRef:
              key: env2
              name: db.env
        - name: MYSQL_ARG_3
          valueFrom:
            configMapKeyRef:
              key: env3
              name: db.env
        - name: MYSQL_ARG_4
          valueFrom:
            configMapKeyRef:
              key: env4
              name: db.env
        - name: MYSQL_ARG_5
          valueFrom:
            configMapKeyRef:
              key: env5
              name: db.env
        - name: MYSQL_ARG_6
          valueFrom:
            configMapKeyRef:
              key: env6
              name: db.env
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mysql-root-password
              name: mysql-root-password
        image: mysql:5.6
        ports:
        - containerPort: 3306
          protocol: TCP        
        volumeMounts:
        - name: db
          mountPath: /var/lib/mysql
        - name: db-init
          mountPath: /docker-entrypoint-initdb.d/setup.sql
          readOnly: true
          subPath: setup.sql
      initContainers:
      - name: db-perm
        image: busybox
        command:
        - sh
        - -c
        - "mkdir /var/lib/mysql/data ; chmod -R 777 /var/lib/mysql/data"
        volumeMounts:
        - name: db
          mountPath: /var/lib/mysql
      volumes:
      - name: db
        emptyDir: {}
      - name: db-init
        secret:
          items:
          - key: setup.sql
            path: setup.sql
          secretName: setup.sql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tomcat
  template:
    metadata:
      labels:
        app: tomcat
    spec:
      containers:
      - name: tomcat
        image: academiaonline/circabc-oss:latest-tomcat
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: angular
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: angular
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: db
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: proxy
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: proxy
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: tomcat
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: tomcat
  type: ClusterIP
---
